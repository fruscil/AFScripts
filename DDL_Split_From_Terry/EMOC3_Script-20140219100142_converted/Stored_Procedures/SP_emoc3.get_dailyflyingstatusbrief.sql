--<ScriptOptions statementTerminator="@"/>


CREATE PROCEDURE         "EMOC3"."GET_DAILYFLYINGSTATUSBRIEF" (
P_CURSOR      OUT EMOC_TYPES.EMOC_CURSOR,
SORTIEDATEIN    SCHEDULE.SORTIEDATE%TYPE,
MOCIDIN   SQUADRONS.MOCID%TYPE
)
AS
BEGIN
-- RETURN THE CURSOR FOR THE RECORDSET
OPEN P_CURSOR FOR
SELECT SQ.SQUADRONID AS squadronid,
    SQ.SHORTNAME AS squadron,
    WI.WINGNAME AS wing,
    COUNT(SCH.scheduleid) AS s,
    SUM(DECODE(trim(DC.DEVIATIONCODE),'CX',1,0)) AS cx,
    SUM(DECODE(trim(DC.DEVIATIONCODE),'GA',1,0)) AS ga,
    SUM(DECODE(trim(DC.DEVIATIONCODE),'AD',1,0)) AS ad,
 SUM(DECODE(SCH.ACTUALLANDING, NULL,0,1)) AS f,
    SUM(DECODE(trim(SCH.SPARE),'1',1,0)) AS spare,
    MIN(TO_CHAR(SCH.ACTUALTAKEOFF, 'DD_MON_YYYY HH24:MI')) AS takeoff,
    MAX(TO_CHAR(SCH.ACTUALLANDING, 'DD_MON_YYYY HH24:MI')) AS land
FROM SQUADRONS SQ
LEFT JOIN SCHEDULE SCH ON SCH.SQUADRONID = SQ.SQUADRONID
LEFT JOIN SCHEDULEDEVIATIONS SD ON SCH.SCHEDULEID = SD.SCHEDULEID
LEFT JOIN DEVIATIONCODES DC ON SD.DEVIATIONCODEID = DC.DEVIATIONCODEID
LEFT JOIN WINGS WI ON SQ.WINGID = WI.WINGID
WHERE SCH.SORTIEDATE = SORTIEDATEIN
AND SQ.MOCID = MOCIDIN
GROUP BY SQ.SQUADRONID, SQ.SHORTNAME, WI.WINGNAME;


END GET_DAILYFLYINGSTATUSBRIEF;
 
 
 
 
 
 
 
 
@
