--<ScriptOptions statementTerminator="@"/>


/*DCW-ERROR GRAMMAR:"An unrecognizable item was found

------------
Error Header
	Source Name: /E:/mitre/project/aflcmc/EMOC/Migration/EMOC3_Script.sql
	Total Line Number: 30031
	Relative Current Chunk Line Number: 30031
	Column Number: 0
------------
 
-------------
Error Message
	Message: no viable alternative at character 'NULL;\nWHEN OTHERS THEN\n  NULL;\nEND GET_SCHEDULEOVERVIEWBRIEF;\n\n[CREATE]'
------------

The following statement (from line 29923 to 30029) and was skipped" BEGIN*/
 CREATE PROCEDURE         "EMOC3"."GET_SCHEDULEOVERVIEWBRIEF"
  (
    P_CURSOR OUT EMOC_TYPES.EMOC_CURSOR,
    SORTIEDATEIN SCHEDULE.SORTIEDATE%TYPE,
    MOCIDIN SQUADRONS.MOCID%TYPE )
  /******************************************************************************
  NAME:       GET_SCHEDULE_BY_SQUADRON_TOTAL
  PURPOSE:    Returns Schedules for the specified squadron with
  text values for codes (JOAP, Fuel, etc.) filled.
  REVISIONS:
  Ver        Date        Author           Description
  ---------  ----------  ---------------  ------------------------------------
  2.2.2      10/5/2005   Joe Chaplin    To get data for Schedule Overview Brief
  4.0.0.2    7/10/2012   J. Long        Update to Deviation Code for QC 408
  PARAMETERS:
  INPUT:
  *SQUADRONIDIN
  *SORTIEDATESTART
  OUTPUT:
  *P_CURSOR
  RETURNED VALUE:
  CALLED BY:
  CALLS:
  EXAMPLE USE:
  ASSUMPTIONS:
  LIMITATIONS:
  ALGORITHM:
  NOTES:
  ******************************************************************************/
AS
BEGIN
  OPEN P_CURSOR FOR SELECT SC.SCHEDULEID
AS
  schedid,
  TO_CHAR(SC.SCHEDULEDTAKEOFF, 'DD_MON_YY HH24:MI')
AS
  schedto,
  TO_CHAR(SC.ACTUALTAKEOFF, 'DD_MON_YY HH24:MI')
AS
  actto,
  DECODE(TO_CHAR(SC.SPARE), '1', 'Y', 'N')
AS
  spare,
  SQ.SHORTNAME
AS
  squadron,
  SQ.SQUADRONID
AS
  squadronid,
  MD.AIRCRAFTMDS
AS
  acmds,
  LC.LANDINGCODE
AS
  landstatus,
  DECODE(DC.DEVIATIONCODE, NULL, DC2.DEVIATIONCODE, 'NONE', DC2.DEVIATIONCODE, DC.DEVIATIONCODE)
AS
  devcode,
  --CC.CAUSECODE as causecode,
  WX.WEATHERCODE
AS
  weathercode,
  SC.AIRCRAFTID
AS
  aircraftid,
  SC.SORTIENUM
AS
  linenum,
  --to_char(SC.SORTIEDATE, 'DD_MON_YY') as sortiedate,
  AC.SHORTTAILNUMBER
AS
  tailnumber,
  --SC.SQUADRONID as squadid,
  CO.COLORVALUE
AS
  color, --ROW COLOR FOR CONDITIONSTATUS
  ST.STATUSCODE
AS
  status,
  CO2.COLORVALUE
AS
  devcolor, --ROW COLOR FOR DEVIATIONS
  RE.REMARKS
AS
  remarks,
  SC.SCHEDULEREMARKS
AS
  schedremarks,
  SC.MAINTREMARKS
AS
  maintremarks,
  CO.FONTCOLOR
AS
  STATUSFONTCOLOR,
  PS.POSSESSIONCODE
AS
  possession,
  CS.FLYABLE
AS
  flyable FROM SCHEDULE SC LEFT JOIN AIRCRAFT AC ON SC.AIRCRAFTID = AC.AIRCRAFTID LEFT JOIN SQUADRONS SQ ON SC.SQUADRONID = SQ.SQUADRONID LEFT JOIN POSSESSIONS PS ON AC.POSSESSIONID = PS.POSSESSIONID LEFT JOIN AIRCRAFTMDS MD ON AC.AIRCRAFTMDSID = MD.AIRCRAFTMDSID LEFT JOIN LANDINGCODES LC ON SC.LANDINGCODEID = LC.LANDINGCODEID LEFT JOIN SCHEDULEDEVIATIONS SD ON SC.SCHEDULEID = SD.SCHEDULEID LEFT JOIN DEVIATIONCODES DC ON SD.DEVIATIONCODEID = DC.DEVIATIONCODEID LEFT JOIN DEVIATIONCODES DC2 ON SC.DEVIATIONCODEID = DC2.DEVIATIONCODEID LEFT JOIN CAUSECODES CC ON SC.CAUSECODEID = CC.CAUSECODEID LEFT JOIN WX ON SC.WXCODEID = WX.WXCODEID LEFT JOIN CONDITIONCODES CD ON AC.CONDITIONCODEID = CD.CONDCODEID LEFT JOIN CONDITIONSTATUS CS ON CD.CONDSTATID = CS.CONDSTATID LEFT JOIN COLORS CO ON CS.COLORID = CO.COLORID LEFT JOIN COLORS CO2 ON DC.COLORID = CO2.COLORID LEFT JOIN STATUSCODE ST ON AC.STATUSCODEID = ST.STATUSCODEID LEFT JOIN REMARKS RE ON RE.REMARKSID = SCHEDULEREMARKS JOIN WINGS WG ON
  SQ.WINGID                                                       = WG.WINGID WHERE SC.SORTIEDATE = SORTIEDATEIN AND SQ.MOCID = MOCIDIN;
EXCEPTION
WHEN NO_DATA_FOUND THEN
  NULL;
WHEN OTHERS THEN
  NULL;
END GET_SCHEDULEOVERVIEWBRIEF@
