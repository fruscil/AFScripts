--<ScriptOptions statementTerminator="@"/>

/*DCW-ERROR GRAMMAR:"An unrecognizable item was found

------------
Error Header
	Source Name: /E:/mitre/project/aflcmc/EMOC/Migration/EMOC3_Script.sql
	Total Line Number: 13260
	Relative Current Chunk Line Number: 13260
	Column Number: 0
------------
 
-------------
Error Message
	Message: no viable alternative at character 'CAUSECODEIDIN\n\t\tWHERE SCHEDULEID = SCHEDULEIDIN;\n\nEND UPDATE_FLYBOARD;\n\n[CREATE]'
------------

The following statement (from line 13120 to 13258) and was skipped" BEGIN*/
 CREATE PROCEDURE                 "EMOC3"."UPDATE_FLYBOARD" (
SCHEDULEIDIN      SCHEDULE.SCHEDULEID%TYPE,
SORTIENUMIN  	 	  SCHEDULE.SORTIENUM%TYPE,
CALLSIGNIN		  	  SCHEDULE.CALLSIGN%TYPE,
PILOTIDIN			  SCHEDULE.PILOTID%TYPE,
AREAIDIN			  SCHEDULE.AREAID%TYPE,
AREAARRIVETIMEIN	  SCHEDULE.AREAARRIVETIME%TYPE,
AREALEAVETIMEIN	  	  SCHEDULE.AREALEAVETIME%TYPE,
SCHEDULEREMARKSIN	  REMARKS.REMARKS%TYPE,
MAINTREMARKSIN REMARKS.REMARKS%TYPE,
CONFIGCODEIN		  SCHEDULE.CONFIGCODE%TYPE,
WXCODEIDIN        SCHEDULE.WXCODEID%TYPE,
ACTUALTAKEOFFIN   SCHEDULE.ACTUALTAKEOFF%TYPE,
ACTUALLANDINGIN   SCHEDULE.ACTUALLANDING%TYPE,
ADJTAKEOFFIN      SCHEDULE.ADJTAKEOFF%TYPE,
ADJLANDINGIN      SCHEDULE.ADJLANDING%TYPE,
LANDINGCODEIDIN   SCHEDULE.LANDINGCODEID%TYPE,
BLOCKNUMBERIN     SCHEDULE.BLOCKNUMBER%TYPE,
CAUSECODEIDIN        SCHEDULE.CAUSECODEID%TYPE
)
/******************************************************************************
   NAME:       UPDATE_FLYBOARD
   PURPOSE:    Updates a schedule line.

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        10/3/03      A.Mitchell       1. Created this procedure.
   1.1        10/23/03     A.Mitchell       2. Added BLOCKNUMBER for nonIMDS locations
                                               so they could use blocks
   2.0		  03/26/13     JACL				3. Edit Cause Code from Flyboard manually
   PARAMETERS:
   INPUT:
   OUTPUT:
   RETURNED VALUE:
   CALLED BY:
   CALLS:
   EXAMPLE USE:
   ASSUMPTIONS:
   LIMITATIONS:
   ALGORITHM:
   NOTES:

******************************************************************************/
AS

REMARKID NUMBER;

BEGIN

	 --GET REMARK, IF ONE EXISTS
	 SELECT SCHEDULEREMARKS
	 INTO REMARKID
	 FROM SCHEDULE
	 WHERE SCHEDULEID = SCHEDULEIDIN;


	 IF REMARKID IS NULL
	 THEN --EXISTS, NOW UPDATE
	  	    BEGIN
		   		 IF  LENGTH(SCHEDULEREMARKSIN) > 0 OR SCHEDULEREMARKSIN IS NOT NULL THEN
				 	BEGIN
						 SELECT SEQ_REMARKS.NEXTVAL
						 INTO   REMARKID
						 FROM   DUAL;
						 ADD_REMARKS (REMARKID, SCHEDULEREMARKSIN);
						 UPDATE SCHEDULE SET SCHEDULEREMARKS = REMARKID WHERE SCHEDULEID = SCHEDULEIDIN;
					END;
				 END IF;
	        END;
	 ELSE
			BEGIN
				 IF  LENGTH(SCHEDULEREMARKSIN) > 0 OR SCHEDULEREMARKSIN IS NOT NULL THEN
				    BEGIN
		    	  	  UPDATE REMARKS SET REMARKS.REMARKSDATE = SYSDATE, REMARKS.REMARKS = SCHEDULEREMARKSIN WHERE REMARKSID = REMARKID;
				    END;
				 ELSE
				    BEGIN
				      UPDATE SCHEDULE SET SCHEDULEREMARKS = NULL WHERE SCHEDULEID = SCHEDULEIDIN;
			 	   	  DELETE REMARKS WHERE REMARKSID = REMARKID;
					END;
				 END IF;
			END;
	 END IF;

	 --GET REMARK, IF ONE EXISTS
	 SELECT MAINTREMARKS
	 INTO REMARKID
	 FROM SCHEDULE
	 WHERE SCHEDULEID = SCHEDULEIDIN;


	 IF REMARKID IS NULL
	 THEN --EXISTS, NOW UPDATE
	  	    BEGIN
		   		 IF  LENGTH(MAINTREMARKSIN) > 0 OR MAINTREMARKSIN IS NOT NULL THEN
				 	BEGIN
						 SELECT SEQ_REMARKS.NEXTVAL
						 INTO   REMARKID
						 FROM   DUAL;
						 ADD_REMARKS (REMARKID, MAINTREMARKSIN);
						 UPDATE SCHEDULE SET MAINTREMARKS = REMARKID WHERE SCHEDULEID = SCHEDULEIDIN;
					END;
				 END IF;
	        END;
	 ELSE
			BEGIN
				 IF  LENGTH(MAINTREMARKSIN) > 0 OR MAINTREMARKSIN IS NOT NULL THEN
				    BEGIN
		    	  	  UPDATE REMARKS SET REMARKS.REMARKSDATE = SYSDATE, REMARKS.REMARKS = MAINTREMARKSIN WHERE REMARKSID = REMARKID;
				    END;
				 ELSE
				    BEGIN
					  UPDATE SCHEDULE SET MAINTREMARKS = NULL WHERE SCHEDULEID = SCHEDULEIDIN;
			 	   	  DELETE REMARKS WHERE REMARKSID = REMARKID;
					END;
				 END IF;
			END;
	 END IF;

	 UPDATE SCHEDULE SET
			SORTIENUM = SORTIENUMIN,
			CALLSIGN = CALLSIGNIN,
			AREAID = AREAIDIN,
			AREAARRIVETIME = AREAARRIVETIMEIN,
			AREALEAVETIME = AREALEAVETIMEIN,
			PILOTID = PILOTIDIN,
			CONFIGCODE = CONFIGCODEIN,
			WXCODEID = WXCODEIDIN,
			ACTUALTAKEOFF = ACTUALTAKEOFFIN,
			ACTUALLANDING = ACTUALLANDINGIN,
			ADJTAKEOFF = ADJTAKEOFFIN,
			ADJLANDING = ADJLANDINGIN,
	    LANDINGCODEID = LANDINGCODEIDIN,
	    BLOCKNUMBER = BLOCKNUMBERIN,
		CAUSECODEID = CAUSECODEIDIN
		WHERE SCHEDULEID = SCHEDULEIDIN;

END UPDATE_FLYBOARD@
